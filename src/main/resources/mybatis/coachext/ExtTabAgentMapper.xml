<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bootdo.coach.dao.ext.ExtTabAgentMapper" >
  <resultMap id="BaseResultMap" type="com.bootdo.coach.domain.TabAgent" >
    <id column="agent_id" property="agentId" jdbcType="BIGINT" />
    <result column="agent_name" property="agentName" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="bg_account" property="bgAccount" jdbcType="VARCHAR" />
    <result column="bg_password" property="bgPassword" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="higher_agent_id" property="higherAgentId" jdbcType="BIGINT" />
    <result column="divide" property="divide" jdbcType="DECIMAL" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="openid" property="openid" jdbcType="VARCHAR" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
    <result column="wechat_name" property="wechatName" jdbcType="VARCHAR" />
    <result column="headimg" property="headimg" jdbcType="VARCHAR" />
    <result column="amount_desirable" property="amountDesirable" jdbcType="DECIMAL" />
    <result column="amount_freeze" property="amountFreeze" jdbcType="DECIMAL" />
    <result column="amount_withdraw" property="amountWithdraw" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    agent_id, agent_name, contacts, tel, account, bg_account, bg_password, level, higher_agent_id, 
    divide, remarks, status, is_delete, openid, unionid, wechat_name, headimg, amount_desirable, 
    amount_freeze, amount_withdraw
  </sql>
  
    <update id="addFreezeAndReduceDesirable" parameterType="Map">
  	update tab_agent set amount_desirable=amount_desirable - #{amount_apply},amount_freeze=amount_freeze + #{amount_apply} where agent_id=#{agent_id}
  </update>
  
    <update id="reduceFreezeAndAddAmountWithdraw" parameterType="Map">
  	update tab_agent set amount_freeze=amount_freeze - #{amount_apply},amount_withdraw=amount_withdraw + #{amount_apply} where agent_id=#{agent_id}
  </update>
  
    <update id="reduceFreezeAndAddAmountDesirable" parameterType="Map">
  	update tab_agent set amount_freeze=amount_freeze - #{amount_apply},amount_desirable=amount_desirable + #{amount_apply} where agent_id=#{agent_id}
  </update>
  
  <update id="addAmountDesirable" parameterType="Map">
  	update tab_agent set amount_desirable=amount_desirable + #{amount_desirable} where agent_id=#{agent_id}
  </update>
  
  <select id="findAgent" resultMap="BaseResultMap" parameterType="Map" >
    select 
    <include refid="Base_Column_List" />
    from tab_agent
    <where>
		<if test="bg_account != null and bg_account != ''"> 
			and bg_account = #{bg_account} 
		</if>
		<if test="bg_password != null and bg_password != ''"> 
			and bg_password = #{bg_password} 
		</if>
		<if test="status != null and status != ''"> 
			and status = #{status} 
		</if>
    </where>
    limit 0,1
  </select>
  	
	  <select id="findAgentByAccount" resultMap="BaseResultMap" parameterType="java.lang.String" >
	    select 
	    <include refid="Base_Column_List" />
	    from tab_agent
	    where account = #{_parameter}
	  </select>
  	
	  <select id="findAgentByOpenId" resultMap="BaseResultMap" parameterType="java.lang.String" >
	    select 
	    <include refid="Base_Column_List" />
	    from tab_agent
	    where openid = #{_parameter}
	  </select>
  <select id="count" resultType="int">
        select count(*) from tab_agent
        <where>
			<if test="agentIdList != null">
				and agent_id  IN
				<foreach collection="agentIdList" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
			<!--<if test="notAgentId != null">
				and agent_id not in( #{notAgentId} ) 
			</if>-->
			<if test="agentName != null and agentName != ''"> 
				and agent_name = #{agentName} 
			</if>
			<if test="bgAccount != null and bgAccount != ''"> 
				and bg_account = #{bgAccount} 
			</if>
			<if test="level != null"> 
				and level = #{level} 
			</if>
			<if test="agentId != null"> 
				and higher_agent_id = #{agentId} AND is_delete=0
			</if>
			<if test="status != null"> 
				and status = #{status}
			</if>
			<if test="isDelete != null"> 
				and is_delete = #{isDelete}
			</if>
			<if test="higher_agent_id != null"> 
				and higher_agent_id = #{higher_agent_id}
			</if>
			<if test="tel != null and tel != ''">
				and tel like #{tel}
			</if>
		</where>
    </select>
  
  	<select id="list" parameterType="Map" resultType="com.bootdo.coach.vo.TabAgentVo">
		select 
		t.*,t1.agent_name as higherAgentName
		from tab_agent t
		left join tab_agent t1 on t.higher_agent_id=t1.agent_id
		<where>
			<if test="agentIdList != null">
				and t.agent_id  IN
				<foreach collection="agentIdList" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
			<!--<if test="notAgentId != null">
				and t.agent_id not in( #{notAgentId} ) 
			</if>-->
			<if test="agentName != null and agentName != ''"> 
				and t.agent_name like #{agentName}
			</if>
			<if test="bgAccount != null and bgAccount != ''"> 
				and t.bg_account = #{bgAccount} 
			</if>
			<if test="level != null"> 
				and t.level = #{level} 
			</if>
			<if test="status != null"> 
				and t.status = #{status}
			</if>
			<if test="isDelete != null"> 
				and t.is_delete = #{isDelete}
			</if>
			<if test="higher_agent_id != null"> 
				and t.higher_agent_id = #{higher_agent_id}
			</if>
			<if test="tel != null and tel != ''">
				and t.tel like #{tel}
			</if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by t.agent_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="listStatistics1" parameterType="Map" resultType="com.bootdo.coach.vo.TabAgentVo">
		select
		t.*,t1.agent_name as higherAgentName, sum(t2.agent_1_money) as incomeAmount
		from tab_agent t
		left join tab_agent t1 on t.higher_agent_id=t1.agent_id
		left join tab_separate_account t2 on t.agent_id = t2.agent_1_id
		<where>
			<if test="notAgentId != null">
				and t.agent_id not in( #{notAgentId} )
			</if>
			<if test="agentName != null and agentName != ''">
				and t.agent_name = #{agentName}
			</if>
			<if test="bgAccount != null and bgAccount != ''">
				and t.bg_account = #{bgAccount}
			</if>
			<if test="level != null">
				and t.level = #{level}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="isDelete != null">
				and t.is_delete = #{isDelete}
			</if>
			<if test="higher_agent_id != null">
				and t.higher_agent_id = #{higher_agent_id}
			</if>
			<if test="starDate != null and starDate != ''">
				and t2.create_time &gt;=DATE_FORMAT( #{starDate,jdbcType=VARCHAR},'%Y-%m-%d %H:%m:%s')
			</if>
			<if test="endDate != null and endDate != ''">
				and t2.create_time &lt;= DATE_FORMAT( #{endDate,jdbcType=VARCHAR},'%Y-%m-%d %H:%m:%s')
			</if>
		</where>
		<!--<choose>-->
		<!--<when test="sort != null and sort.trim() != ''">-->
		<!--order by ${sort} ${order}-->
		<!--</when>-->
		<!--<otherwise>-->
		<!--order by t.agent_id desc-->
		<!--</otherwise>-->
		<!--</choose>-->
		group by t.agent_id
		order by t.agent_id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="listStatistics2" parameterType="Map" resultType="com.bootdo.coach.vo.TabAgentVo">
		select
		t.*,t1.agent_name as higherAgentName, sum(t2.agent_2_money) as incomeAmount
		from tab_agent t
		left join tab_agent t1 on t.higher_agent_id=t1.agent_id
		left join tab_separate_account t2 on t.agent_id = t2.agent_2_id
		<where>
			<if test="notAgentId != null">
				and t.agent_id not in( #{notAgentId} )
			</if>
			<if test="agentName != null and agentName != ''">
				and t.agent_name = #{agentName}
			</if>
			<if test="bgAccount != null and bgAccount != ''">
				and t.bg_account = #{bgAccount}
			</if>
			<if test="level != null">
				and t.level = #{level}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="isDelete != null">
				and t.is_delete = #{isDelete}
			</if>
			<if test="higher_agent_id != null">
				and t.higher_agent_id = #{higher_agent_id}
			</if>
			<if test="starDate != null and starDate != ''">
				and t2.create_time &gt;=DATE_FORMAT( #{starDate,jdbcType=VARCHAR},'%Y-%m-%d %H:%m:%s')
			</if>
			<if test="endDate != null and endDate != ''">
				and t2.create_time &lt;= DATE_FORMAT( #{endDate,jdbcType=VARCHAR},'%Y-%m-%d %H:%m:%s')
			</if>
		</where>
		<!--<choose>-->
		<!--<when test="sort != null and sort.trim() != ''">-->
		<!--order by ${sort} ${order}-->
		<!--</when>-->
		<!--<otherwise>-->
		<!--order by t.agent_id desc-->
		<!--</otherwise>-->
		<!--</choose>-->
		group by t.agent_id
		order by t.agent_id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="listStatistics3" parameterType="Map" resultType="com.bootdo.coach.vo.TabAgentVo">
		select
		t.*,t1.agent_name as higherAgentName, sum(t2.agent_3_money) as incomeAmount
		from tab_agent t
		left join tab_agent t1 on t.higher_agent_id=t1.agent_id
		left join tab_separate_account t2 on t.agent_id = t2.agent_3_id
		<where>
			<if test="notAgentId != null">
				and t.agent_id not in( #{notAgentId} )
			</if>
			<if test="agentName != null and agentName != ''">
				and t.agent_name = #{agentName}
			</if>
			<if test="bgAccount != null and bgAccount != ''">
				and t.bg_account = #{bgAccount}
			</if>
			<if test="level != null">
				and t.level = #{level}
			</if>
			<if test="status != null">
				and t.status = #{status}
			</if>
			<if test="isDelete != null">
				and t.is_delete = #{isDelete}
			</if>
			<if test="higher_agent_id != null">
				and t.higher_agent_id = #{higher_agent_id}
			</if>
			<if test="starDate != null and starDate != ''">
				and t2.create_time &gt;=DATE_FORMAT( #{starDate,jdbcType=VARCHAR},'%Y-%m-%d %H:%m:%s')
			</if>
			<if test="endDate != null and endDate != ''">
				and t2.create_time &lt;= DATE_FORMAT( #{endDate,jdbcType=VARCHAR},'%Y-%m-%d %H:%m:%s')
			</if>
		</where>
		<!--<choose>-->
		<!--<when test="sort != null and sort.trim() != ''">-->
		<!--order by ${sort} ${order}-->
		<!--</when>-->
		<!--<otherwise>-->
		<!--order by t.agent_id desc-->
		<!--</otherwise>-->
		<!--</choose>-->
		group by t.agent_id
		order by t.agent_id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>


	<update id="updateAgentLevelAndHigherAgentId" parameterType="Map">
		update tab_agent SET higher_agent_id=#{higherAgentId},`level`=`level`-1 WHERE higher_agent_id=#{agentId} AND is_delete=0
	</update>
	
	<update id="updatePwd" parameterType="Map">
		update tab_agent SET bg_password=#{bg_password} WHERE bg_account=#{bg_account}
	</update>
	
	<update id="updateAgentHigherAgentId" parameterType="Map">
		update tab_agent SET higher_agent_id=#{higherAgentId} WHERE higher_agent_id=#{agentId} AND is_delete=0
	</update>
	
	<select id="findAgentIdList" resultType="Long" parameterType="Map" >
	    select agent_id
	    from tab_agent
	    where status=1
	    <if test="agentIdList != null"> 
			and higher_agent_id IN
			<foreach collection="agentIdList" item="id" open="(" separator="," close=")">
            #{id}
        	</foreach>
		</if>
  	</select>

	<select id="getAgentList" resultMap="BaseResultMap" parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from tab_agent
		where status = 1
		<if test="agentIdList != null" >
			and agent_id IN
			<foreach collection="agentIdList" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
	</select>

	<select id="getAgentByTel" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tab_agent
		where tel =#{tel}
	</select>
</mapper>