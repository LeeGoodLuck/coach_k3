<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bootdo.coach.dao.ext.ExtTabTestMapper">
    <resultMap id="BaseResultMap" type="com.bootdo.coach.domain.TabTest">
        <id column="test_id" property="testId" jdbcType="BIGINT"/>
        <result column="student_id" property="studentId" jdbcType="BIGINT"/>
        <result column="test_time" property="testTime" jdbcType="TIMESTAMP"/>
        <result column="test_duration" property="testDuration" jdbcType="INTEGER"/>
        <result column="coach_id" property="coachId" jdbcType="BIGINT"/>
        <result column="plate_number" property="plateNumber" jdbcType="VARCHAR"/>
        <result column="test_subjec" property="testSubjec" jdbcType="VARCHAR"/>
        <result column="test_score" property="testScore" jdbcType="DECIMAL"/>
        <result column="test_money" property="testMoney" jdbcType="DECIMAL"/>
        <result column="pay_status" property="payStatus" jdbcType="INTEGER"/>
        <result column="longitude" property="longitude" jdbcType="VARCHAR"/>
        <result column="latitude" property="latitude" jdbcType="VARCHAR"/>
        <result column="device_id" property="deviceId" jdbcType="BIGINT"/>
        <result column="pay_way" property="payWay" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.bootdo.coach.domain.TabTest" extends="BaseResultMap">
        <result column="test_data" property="testData" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    test_id, student_id, test_time, test_duration, coach_id, plate_number, test_subjec, 
    test_score, test_money, pay_status, longitude, latitude, device_id, pay_way
  </sql>
    <sql id="Blob_Column_List">
    test_data
  </sql>

    <insert id="insertSelectiveAndReturnId" parameterType="com.bootdo.coach.domain.TabTest">
        insert into tab_test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="testId != null">
                test_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="testTime != null">
                test_time,
            </if>
            <if test="testDuration != null">
                test_duration,
            </if>
            <if test="coachId != null">
                coach_id,
            </if>
            <if test="plateNumber != null">
                plate_number,
            </if>
            <if test="testSubjec != null">
                test_subjec,
            </if>
            <if test="testScore != null">
                test_score,
            </if>
            <if test="testMoney != null">
                test_money,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="testData != null">
                test_data,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="deviceId != null">
                device_id,
            </if>
            <if test="payWay != null">
                pay_way,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="testId != null">
                #{testId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="testTime != null">
                #{testTime,jdbcType=TIMESTAMP},
            </if>
            <if test="testDuration != null">
                #{testDuration,jdbcType=INTEGER},
            </if>
            <if test="coachId != null">
                #{coachId,jdbcType=BIGINT},
            </if>
            <if test="plateNumber != null">
                #{plateNumber,jdbcType=VARCHAR},
            </if>
            <if test="testSubjec != null">
                #{testSubjec,jdbcType=VARCHAR},
            </if>
            <if test="testScore != null">
                #{testScore,jdbcType=DECIMAL},
            </if>
            <if test="testMoney != null">
                #{testMoney,jdbcType=DECIMAL},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="testData != null">
                #{testData,jdbcType=LONGVARCHAR},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=VARCHAR},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=VARCHAR},
            </if>
            <if test="deviceId != null">
                #{deviceId, jdbcType=BIGINT},
            </if>
            <if test="payWay != null">
                #{payWay, jdbcType=INTEGER},
            </if>
        </trim>
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="testId">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="findTestCnt" resultType="Integer" parameterType="java.lang.Long">
    select 
    count(*)
    from tab_test
    where student_id = #{_parameter}
  </select>

    <select id="queryTestList" parameterType="Map" resultType="Map">
  		SELECT test_id,test_time,test_duration,plate_number,test_score
  		FROM tab_test
  		where student_id=#{student_id}
  		limit #{startNum},#{limitNum}
  </select>

    <select id="findLastOneTest" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tab_test
        where student_id = #{_parameter}
        order by test_id desc
        limit 0,1
    </select>

    <select id="count" resultType="int">
        select count(*)
        from tab_test t
        left join tab_student t2 on t2.student_id=t.student_id
        <where>
            <if test="studentName != null and studentName != ''">
                and t2.student_name = #{studentName}
            </if>
        </where>
    </select>

    <select id="list" resultType="com.bootdo.coach.vo.TabTestVo">
        select t.*,t1.coach_name as coachName,t2.student_name as studentName
        from tab_test t
        left join tab_coach t1 on t1.coach_id=t.coach_id
        left join tab_student t2 on t2.student_id=t.student_id
        <where>
            <if test="studentName != null and studentName != ''">
                and t2.student_name = #{studentName}
            </if>
        </where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
            <otherwise>
                order by t.test_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>
</mapper>